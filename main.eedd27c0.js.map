{"version":3,"sources":["scripts/main.js"],"names":["activeRow","table","document","querySelector","head","tHead","body","tBodies","rows","currentSortingField","offices","form","createElement","pushNotification","posTop","posRight","title","description","type","notification","className","dataset","qa","style","top","right","innerHTML","append","setTimeout","remove","parseSalary","salary","slice","replace","stringifySalary","toLocaleString","classList","add","map","office","addEventListener","event","preventDefault","personName","value","position","age","newRow","length","reset","sortingField","target","textContent","rowsCopy","reverse","sort","a","b","children","localeCompare","forEach","row","parentElement"],"mappings":"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","file":"main.eedd27c0.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst head = table.tHead;\nconst body = table.tBodies[0];\nconst rows = body.rows;\nlet currentSortingField = '';\nlet activeRow;\nconst offices = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nform.innerHTML = `\n    <label>Name:\n      <input data-qa=\"name\" name=\"name\" type=\"text\" required>\n    </label>\n    <label>Position:\n      <input data-qa=\"position\" name=\"position\" type=\"text\" required>\n    </label>\n    <label>Office:\n      <select data-qa=\"office\" name=\"office\" required>\n        ${offices.map(office => `<option value=\"${office}\">${office}</option>`)}\n      </select>\n    </label>\n    <label>Age:\n      <input data-qa=\"age\" name=\"age\" type=\"number\" required>\n    </label>\n    <label>Salary:\n      <input data-qa=\"salary\" name=\"salary\" type=\"number\" required>\n    </label>\n\n    <button type=\"submit\">Save to table</button>`;\n\ndocument.body.append(form);\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const personName = form.querySelector('[name=\"name\"]').value;\n  const position = form.querySelector('[name=\"position\"]').value;\n  const office = form.querySelector('[name=\"office\"]').value;\n  const age = +form.querySelector('[name=\"age\"]').value;\n  const salary = +form.querySelector('[name=\"salary\"]').value;\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n  <td>${personName}</td>\n  <td>${position}</td>\n  <td>${office}</td>\n  <td>${age}</td>\n  <td>${stringifySalary(salary)}</td>\n  `;\n\n  if (personName.length < 4) {\n    pushNotification(10, 10, 'Error',\n      'Name should contain more than 4 letters', 'error');\n\n    return;\n  }\n\n  if (age < 18 || age > 90) {\n    pushNotification(10, 10, 'Error',\n      'Age should be greater than 18 and less than 90', 'error');\n\n    return;\n  }\n\n  body.append(newRow);\n\n  pushNotification(10, 10, 'Success',\n    'Person successfully added', 'success');\n\n  form.reset();\n});\n\nhead.addEventListener('click', (event) => {\n  const sortingField = event.target.textContent;\n  const rowsCopy = [...rows];\n\n  if (currentSortingField === sortingField) {\n    rowsCopy.reverse();\n  } else {\n    rowsCopy.sort((a, b) => {\n      switch (sortingField) {\n        case 'Name':\n          return a.children[0].textContent\n            .localeCompare(b.children[0].textContent);\n\n        case 'Position':\n          return a.children[1].textContent\n            .localeCompare(b.children[1].textContent);\n\n        case 'Office':\n          return a.children[2].textContent\n            .localeCompare(b.children[2].textContent);\n\n        case 'Age':\n          return +a.children[3].textContent\n            - +b.children[3].textContent;\n\n        case 'Salary':\n          return parseSalary(a.children[4].textContent)\n            - parseSalary(b.children[4].textContent);\n\n        default:\n          return 0;\n      }\n    });\n\n    currentSortingField = sortingField;\n  }\n\n  rowsCopy.forEach(row => body.append(row));\n});\n\nbody.addEventListener('click', (event) => {\n  const row = event.target.parentElement;\n\n  if (activeRow && activeRow !== row) {\n    activeRow.classList.remove('active');\n  }\n\n  row.classList.add('active');\n  activeRow = row;\n});\n\nfunction pushNotification(posTop, posRight, title, description, type) {\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${type}`;\n  notification.dataset.qa = notification;\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n\n  notification.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  document.body.append(notification);\n\n  setTimeout(() => notification.remove(), 2000);\n};\n\nfunction parseSalary(salary) {\n  return +salary.slice(1).replace(',', '');\n}\n\nfunction stringifySalary(salary) {\n  return '$' + salary.toLocaleString('en-US');\n}\n"]}